<?php
/**
 * Process the form generated by addstorage1, to process the credit card and upgrade the user's disk quota.
 * @package Dispatchers
 */
/**
  */
function _config_addstorage2() {
	$config = Array();
	// Start config
	// Stop config
	return $config;
}

function _dispatch_addstorage2($template, $args) {
    // not how we do it now.
/*$world = $args['world'];
$user = $args['user'];

// make sure that there really is a storage upgrade matching their request
global $STORAGEUPGRADES;
if (!$STORAGEUPGRADES[$_REQUEST['storage']]) {
   print javascriptalert('Please select the storage upgrade you would like.');
   return print redirect('account.addstorage1');
}

// days < 0 should never ever happen, but handle it just in case, because a negative days would give very goofy results
if ($user->daysUntilExpiration() < 0) return print redirect('account.addtime1');
$price = $user->priceStorageUpgrade($_REQUEST['storage']);
$description = sprintf("\$$price Account %s adding %.2f GB of storage", $user->username, $_REQUEST['storage'] );

// run the card
$result = run_creditcard($world->config['creditcardkey'],$price,$description,$_REQUEST['cc_cardholder'],$_REQUEST['cc_number'],$_REQUEST['Date_Month'],$_REQUEST['Date_Year']);
if (!$result) {
   print javascriptalert('Your credit card did not go through. Please try again.');
   return print redirect('account.addstorage1');
}

// If we got here, the card cleared, so go ahead and add the storage
$user->diskquota += $_REQUEST['storage'] * 1000;
$world->logAccountActivity($user->username, 'storage', $description);

// done!
print javascriptalert('Your storage has been upgraded.');
print redirect('account.type');
*/
}?>
