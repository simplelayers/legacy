<?php
use utils\ParamUtil;

/**
 * Process the form generated by details1, saving their updated account info.
 * 
 * @package Dispatchers
 */
/**
 */
function _config_action()
{
    $config = Array();
    // Start config
    // Stop config
    return $config;
}

function _dispatch_action($template, $args, $org, $pageArgs)
{
    $action = ParamUtil::Get($args, 'action');
    
    $pageActor = ParamUtil::Get($pageArgs, 'pageActor');
    
    $world = System::Get();
    $user = SimpleSession::Get()->GetUser();
    $groupId = ParamUtil::GetOne($args, 'groupId', 'group');
    
    $group = Group::GetGroup($groupId);
    
    if (! isset($_REQUEST['userid'])) {
        $_REQUEST['userid'] = $_GET['user'];
    }
    
    if ($pageActor != 'admin') {
        if ($group->moderator->id == $args['user']->id) {
            $pageActor = 'moderator';
        } else {
            if ($group->org_id == $org->id) {
                if ($pageArgs['orgActor'] == 'org_owner')
                    $pageActor = 'moderator';
            }
        }
    } else {
        $pageActor = 'moderator';
    }
    
    $isModerator = $pageActor == 'moderator';
    
    switch ($action) {
        case 'forceadd':
            $group->joinById($_REQUEST['userid'], false);
            break;
        case 'invite':
            if ($isModerator)
                $group->inviteById($_REQUEST['userid'], true);
            break;
        case 'uninvite':
            if ($isModerator)
                $group->uninviteById($_REQUEST['userid'], true);
            break;
        case 'acceptinvite':
            $group->acceptInviteById($user->id, true);
            break;
        case 'denyinvite':
            $group->denyInviteById($user->id, true);
            break;
        case 'acceptrequest':
            if ($isModerator)
                $group->acceptRequestById($_REQUEST['userid'], true);
            break;
        case 'denyrequest':
            if ($isModerator) {
                $group->denyRequestById($_REQUEST['userid'], true);
            }
            break;
        case 'join':
            $group->joinById($user->id, true);
            break;
        case 'request':
            $group->requestById($user->id, true);
            break;
        case 'unrequest':
            $group->unrequestById($user->id, true);
            break;
        case 'kick':
            if ($isModerator)
                $group->kickById($_REQUEST['userid'], true);
            break;
        case 'leave':
            $group->leaveById($user->id, true);
            break;
    }
    
    // done
    print redirect('group.info&groupId=' . $group->id);
}
?>
